package com.allen.android.smartflyper

import android.app.Activity
import android.os.Bundle
import android.util.Log
import com.yy.core.yyp.smart.ISmartFlyper2
import com.yy.core.yyp.smart.SmartFlyperDelegate
import com.yy.core.yyp.smart.SmartFlyperFactory__app
import com.yy.core.yyp.smart.WrapperMethod
import com.yy.core.yyp.smart.anotation.SmartAppender
import com.yy.core.yyp.smart.anotation.SmartUri
import io.reactivex.Observable
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.MainScope
import kotlinx.coroutines.cancel
import kotlinx.coroutines.channels.Channel
import kotlinx.coroutines.channels.consumeEach
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch

@ExperimentalCoroutinesApi
class MainActivity : Activity(), CoroutineScope by MainScope() {

    val TAG = "MainActivity"
    var channel: Channel<String>? = null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        setContentView(R.layout.activity_main)
        SmartFlyperFactory__app().getApi(InnerService::class.java)
        SmartFlyperDelegate.setSmartFlyper2(object : ISmartFlyper2 {
            override suspend fun <T> sendCoroutines(method: WrapperMethod): T? {
                return getUser() as? T
            }

            override suspend fun <T> registerCoroutinesBroadcast(method: WrapperMethod): T? {
                return ITestService2ImplAutoGenerated().onGetRoomDetailInfoBroadcast() as? T
            }
        })
        GlobalScope.launch(context = Dispatchers.IO) {
            //延时一秒
            delay(1000)
            val userEntity = ITestService2ImplAutoGenerated().getUserInfo2(mutableListOf<Long>(18398343))
            Log.d(TAG, "onCreate: launch ${userEntity?.name}")
        }

        channel = Channel()

        //在mainScope中启动
        launch {
            val userEntity = ITestService2ImplAutoGenerated().getUserInfo2(mutableListOf<Long>(18398343))
            Log.d(TAG, "onCreate: launch ${userEntity?.name}")
            channel?.let {
                it.invokeOnClose {
                    Log.d(TAG, "onCreate: channel is closed")
                }
                it.consumeEach {
                    Log.d(TAG, "onCreate: consumeEach $it")
                }
            }
        }
        GlobalScope.launch(Dispatchers.IO) {
            repeat(3) {
                delay(3000)
                if (channel?.isClosedForSend == false) {
                    channel?.send("allen接受到了啊 $it")
                } else {
                    Log.d(TAG, "onCreate: is close")
                }
                if (it == 1) {
                    channel?.cancel()
                }
            }
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        cancel()
    }

    interface InnerService {
        @SmartUri(max = 101, req = 312, rsp = 313, appId = 60015)
        @SmartAppender
        fun roomInfo(): Observable<String>?
    }

    suspend fun getUser(): UserEntity {
        return UserEntity().apply {
            name = "allen"
        }
    }
}